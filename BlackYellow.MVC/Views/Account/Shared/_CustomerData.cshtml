@model BlackYellow.Domain.Entites.Customer


<div class="container">


    @Html.HiddenFor(fn => fn.CustomerId, new { @class = "form-control" })
    @Html.HiddenFor(fn => fn.Address.AddressId, new { @class = "form-control" })
    @Html.HiddenFor(fn => fn.User.UserId, new { @class = "form-control" })
    @Html.HiddenFor(fn => fn.UserId, new { @class = "form-control" })

    <p id="email_field" class="form-group">
        @Html.LabelFor(fn => fn.User.Email, "E-mail")
        @Html.TextBoxFor(fn => fn.User.Email, new { @class = "form-control", required = "required", placeholder = "Endereço de E-mail" })
        @Html.ValidationMessageFor(fn => fn.User.Email)
    </p>

    <p id="account_password_field" class="form-group">
        @Html.LabelFor(fn => fn.User.Password, "Senha")
        @Html.PasswordFor(fn => fn.User.Password, new { @class = "form-control", placeholder = "", required = "required" })
        @Html.ValidationMessageFor(fn => fn.User.Password)
    </p>

    <p id="first_name_field" class="form-group">
        @Html.LabelFor(fn => fn.FirstName, "Nome")
        @Html.TextBoxFor(fn => fn.FirstName, new { @class = "form-control", required = "required", minlength = 2 })
        @Html.ValidationMessageFor(fn => fn.FirstName)
    </p>
    <p id="last_name_field" class="form-group">
        @Html.LabelFor(fn => fn.LastName, "Sobrenome")
        @Html.TextBoxFor(fn => fn.LastName, new { @class = "form-control", required = "required", minlength = 2 })
        @Html.ValidationMessageFor(fn => fn.LastName)
    </p>

    <p id="cpf_field" class="form-group">
        @Html.LabelFor(fn => fn.Cpf, "CPF")
        @Html.TextBoxFor(fn => fn.Cpf, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Cpf)
    </p>

    <p id="cpf_field" class="form-group">
        @Html.LabelFor(fn => fn.Birthday, "Nascimento")
        @Html.TextBoxFor(fn => fn.Birthday, new { @class = "form-control datepicker", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Birthday)
    </p>


    <div class="clear"></div>

    <p id="postcode_field" class="form-group">
        @Html.LabelFor(fn => fn.Address.ZipCode, "CEP")
        @Html.TextBoxFor(fn => fn.Address.ZipCode, new { @class = "form-control", placeholder = "CEP / Código Postal", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Address.ZipCode)
    </p>
    <!-- #region Adress -->
    <p id="address_1_field" class="form-group">
        @Html.LabelFor(fn => fn.Address.Street, "Logradouro")
        @Html.TextBoxFor(fn => fn.Address.Street, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Address.Street)
    </p>
    <p id="address_2_field" class="form-group">
        @Html.LabelFor(fn => fn.Address.Street2, "Complemento")
        @Html.TextBoxFor(fn => fn.Address.Street2, new { @class = "form-control", placeholder = "Apartamento, Andar, etc... (opcional)" })
        @Html.ValidationMessageFor(fn => fn.Address.Street2)
    </p>

    <p id="number_field" class="form-group">
        @Html.LabelFor(fn => fn.Address.Number, "Número")
        @Html.TextBoxFor(fn => fn.Address.Number, new { @class = "form-control", placeholder = "Número", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Address.Number)
    </p>

    <p id="city_field" class="form-group">
        @Html.LabelFor(fn => fn.Address.City, "Cidade")
        @Html.TextBoxFor(fn => fn.Address.City, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Address.City)
    </p>
    <p id="state_field" class="form-group">
        @Html.LabelFor(fn => fn.Address.State, "Estado")
        @Html.TextBoxFor(fn => fn.Address.State, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Address.State)
    </p>

    <!-- #endregion -->



    <div class="clear"></div>

    <p id="phone_field" class="form-group">
        @Html.LabelFor(fn => fn.Phone, "Telefone")
        @Html.TextBoxFor(fn => fn.Phone, new { @class = "form-control", placeholder = "Telefone para contato", required = "required" })
        @Html.ValidationMessageFor(fn => fn.Phone)
    </p>


    <script>
        $(document).ready(function () {


            //Quando o campo cep perde o foco.
            $("#Address_ZipCode").blur(function () {

                //Nova variável "cep" somente com dígitos.
                var cep = $(this).val().replace(/\D/g, '');

                //Verifica se campo cep possui valor informado.
                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if (validacep.test(cep)) {

                        var street = document.getElementById("Address_Street");
                        var city = document.getElementById("Address_City");
                        var state = document.getElementById("Address_State");

                        //Preenche os campos com "..." enquanto consulta webservice.
                        street.value = ("...");
                        city.value = ("...");
                        state.value = ("...");

                        //Consulta o webservice viacep.com.br/
                        $.getJSON("//viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                street.value = (dados.logradouro);
                                city.value = (dados.localidade);
                                state.value = (dados.uf);
                            } //end if.
                            else {
                                bootbox.alert("CEP não encontrado.");
                            }
                        });
                    } //end if.
                    else {
                        bootbox.alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {

                }
            });
              

        });
    </script>


</div>